pdf("pa.pdf")
pa
dev.off()
source("display.R")
source("display.R")
source("display.R")
source("display.R")
source("display.R")
source("display.R")
source("display.R")
source("display.R")
source("display.R")
pa
pdf("pa1.pdf")
pa
dev.off()
q()
source("display.R")
q()
p <- plot(1:5, rnorm(5), main="test")
pdf("p.pdf")
p
dev.off()
q()
p
p <- plot(1:5, rnorm(5), main="test")
pdf("p.pdf")
p <- plot(1:5, rnorm(5), main="test")
plot(1:5, rnorm(5), main="test")
dev.off()
q()
postscript("p.ps")
plot(1:5, rnorm(5), main="test")
dev.off()
q()
source("display.R")
ZZ
q()
source("display.R")
q()
source("display.R")
q()
source("display.R")
q()
source("display.R")
pa
source("display.R")
pa
source("display.R")
pa
source("display.R")
source("display.R")
source("display.R")
?OU
??OU
Sim.DiffProc::OU
?Sim.DiffProc::OU
q()
q()
source("gabor.R")
q()
source("display.R")
q()
cmisw
cmise
q()
cmise[[2
]]
q()
source("display.R")
q()
source("display.R")
q()
source("gabor.R")
source("display.R")
q()
source("display.R")
q()
source("display.R")
q()
q()
source("gabor.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
ABN(N=obs,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
ABM(N=obs,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
ABM(N=100,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
a<-ABM(N=100,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
str(a)
attr(a)
a[[1]]
row(a)
class(a)
source("gabor.R")
install.packages(yuima)
install.packages("yuima")
q()
version
q()
source("gabor.R")
source("gabor.R")
source("gabor.R")
mod <- setModel(drift=c("mu*x"), diffusion="sigma", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x")
set.seed(123)
X<- simulate(mod,sampling=setSampling(n=1000))
mod <- setModel(drift=c("0.5*x"), diffusion="0.2", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
X<- simulate(mod,sampling=setSampling(n=1000))
X
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,0.1:w)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
plot(X)
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2*x", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2*x", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("0.5*x"), diffusion="0.2*x", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
mod <- setModel(drift=c("0.5*x"), diffusion="0.2*x", jump.coeff="1", measure=list(intensity="0", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000))
plot(X)
mod <- setModel(drift=c("-theta * x"), diffusion="sigma", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
mod <- setModel(drift=c("-theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
mod <- setModel(drift=c("-theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,0.1)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=1,sigma=3))
plot(X)
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="10", df=list("dnorm(z,0,1)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.3)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
str(X)]#
str(X)]
str(X)
X.data
X$data
class(X)
X.data
X[[1]]
X
ts(X)
X
X[1]
get.zoo.data(X)
str(get.zoo.data(X))
str(get.data(X))
ts(get.zoo.data(X))
str(get.zoo.data(X))
str(a)
a<-ABM(N=100,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
str(a)
b <- ts(get.zoo.data(X))
str(b)
str(a)
b
b[1]
head(b)
a<-ABM(N=100,t0=t0,T=T, x0 = init, theta=mu,sigma=sigma)
head(a)
head(b)
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
X
as.ts(X)
as.zoo(X)
as.zoo(get.zoo.data(X))
(get.zoo.data(X))
b<-(get.zoo.data(X))
head(b)
slotNames(X)
data(X)
X@data
slotNames(X)
X@data
X@data[1]
X@data
X@data@zoo.data
str(get.zoo.data)
str(get.zoo.data(X))
source(gabor.R)
source("gabor.R")
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="0", measure=list(intensity="5", df=list("dnorm(z,0,0.3)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
source("gabor.R")
source("gabor.R")
source("gabor.R")
X
get.zoo.data(X)
b <- get.zoo.data(X)
b[1]
str(b)
class(b)
b[[1]]
b[[2]]
b[[1]]
class(b[[1]])
ts(b[[1]])
ts(b[[1]])[1]
ts(b[[1]])
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="0", measure=list(intensity="5", df=list("dnorm(z,0,0.3)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
mod <- setModel(drift=c("theta * x"), diffusion="sigma * x", jump.coeff="1", measure=list(intensity="5", df=list("dnorm(z,0,0.3)")), measure.type="CP", solve.variable="x", xinit="1")
X<- simulate(mod,sampling=setSampling(n=1000), true.p=list(theta=0.5,sigma=0.2))
plot(X)
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
x<- 1:13
x
x*[x<2]
x[x<2]
ifelse(x>2, x, 0)
ifelse(is.even(x), x, 0)
ifelse(x%%2==0, x, 0)
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("display.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("display.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("display.R")
source("gabor.R")
source("display.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("display.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()
source("gabor.R")
q()~
a
q()
source("gabor.R")
q()
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
q()
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
q()
source("gabor.R")
source("gabor.R")
source("gabor.R")
source("gabor.R")
q()
source("gabor.R")
wmise[[2]]
wmise[[1]]
cmise[[1]]
omise[[1]]
q()
source("display.R")
cmise[[2]]
cmise[[1]]
cmise[[1]][1,2]
cmise[[1]][1,3]<-0
cmise[[1]]
cmise[[1]][3,3]<-0
a <-matrix(0, nrow=2, ncol=3)
a
rbind(cmise[[1]],a)
cmise[[1]] <- rbind(cmise[[1]],a)
cmise[[1]]
q()
source("display.R")
q()
source("gabor.R")
gmise[[1]]
gmisefinal <- gmise[[1]]
rbind(gmisefinal
q()
gmisefinal
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
gmisefinal
source("gabor.R")
gmisefinal
gmise[[1]]
source("gabor.R")
gmise[[1]]
rbind(gmisefinal, gmise[[1]])
gmisefinal <- rbind(gmisefinal, gmise[[1]])
gmisefinal
q()
gmisefinal
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
source("gabor.R")
gmise[[1]]
rbind(gmisefinal, gmise[[1]])
gmisefinal <- rbind(gmisefinal, gmise[[1]])
gmisefinal
q()
